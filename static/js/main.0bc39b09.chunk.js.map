{"version":3,"sources":["components/cards.js","components/popup.js","components/cardList.js","components/searchComponent.js","components/scroll.js","conatiner/App.js","reportWebVitals.js","index.js"],"names":["Cards","id","name","email","popupFun","className","src","alt","width","type","onClick","popup","closePopup","image","console","log","CardList","robots","popupWindow","length","class","map","data","i","Search","searchedData","placeholder","onChange","Scroll","props","style","height","border","overflowY","children","App","onSearchChange","event","setState","searchInput","target","value","openPopup","currentImage","parentNode","state","message","loading","fetch","then","resp","json","user","this","filterRobot","filter","robot","toLowerCase","includes","Fragment","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bc39b09.chunk.js","sourcesContent":["const Cards = ({ id, name, email, popupFun }) => {\r\n  let url;\r\n  return (\r\n    <div className=\"bg-light-blue dib br1 pa2 ma1 dim bw3 shadow-3\">\r\n      <img src={`https://robohash.org/${id}?set=set2?`} alt=\"kittyImage\" width=\"250\" />\r\n      <div>\r\n        <h4>{name}</h4>\r\n        <p>{email}</p>\r\n      </div>\r\n      <button type=\"button\" className=\"pa2 br1 bg-red\" onClick={popupFun}>View</button>\r\n    </div>\r\n  )\r\n}\r\nexport default Cards;","import React from 'react';\r\nimport './popup.css';\r\nconst popup = ({closePopup,image})=> {\r\n  console.log(image);\r\n  return (\r\n    <div className=\"popup_back\">\r\n      <div className=\"popup\">\r\n        <div className=\"cross\" onClick={closePopup}>x</div>\r\n        <div className=\"show_image\">\r\n          <img src={image} width=\"500\"/>\r\n        </div>\r\n       </div>\r\n    </div>\r\n  )\r\n}\r\nexport default popup;","import Cards from './cards';\nimport Popup from './popup';\nconst CardList = ({ robots,popupWindow}) => {\n  return (\n    <div>  \n      {\n        robots.length===0?<h2 class=\"loading\">No Records Found!</h2>:\n        robots.map((data, i) => {\n          return <Cards\n            key={i}\n            id={robots[i].id}\n            name={robots[i].name}\n            email={robots[i].email}\n            popupFun={popupWindow}\n          />\n        })\n      }\n    </div>\n  )\n}\n\nexport default CardList;","const Search = ({searchedData}) => {\r\n  return (\r\n    <div>\r\n      <input type=\"text\" placeholder=\"Search name\" onChange={searchedData} className=\"pa2 br2 b-green bg-light-blue\"/><br/><br/>\r\n    </div>\r\n  )\r\n}\r\nexport default Search;","const Scroll = (props) => {\r\n  return (\r\n    <div style={{height:'550px', border:'3px solid #0cab', overflowY:'auto'}}>\r\n       { props.children }\r\n    </div>\r\n  )\r\n}\r\nexport default Scroll;","import React,{Component} from 'react';\r\nimport CardList from '../components/cardList';\r\nimport Search from '../components/searchComponent';\r\nimport Message from '../components/Message';\r\nimport Scroll from '../components/scroll';\r\nimport Popup from '../components/popup';\r\nimport './App.css';\r\n\r\n//for using states we need to convert fun comp into class comp\r\n// const Layout = (params) => {\r\n//   return (\r\n//     <div>\r\n//       {/* <h1>Im im first child</h1>\r\n//         <h1>Im im second child</h1> */}\r\n//       {/* similar to above*/}\r\n//       <h1>Im im third child</h1>\r\n//       { params.children[0]} \r\n//     </div>\r\n//   )\r\n// }\r\n// const Rekha = (props) => {\r\n//   return (\r\n//     <div>\r\n//       {props.children}\r\n//       {props.id}\r\n//     </div>\r\n//   )\r\n// }\r\n// const App = () => {\r\n//   return (\r\n//     <div>\r\n//       <Layout>\r\n//         <h1>Im im first child</h1>\r\n//         <h1>Im im second child</h1>\r\n//       </Layout>\r\n//       <Rekha id={0}>\r\n//         <h1>Im Rekha</h1>\r\n//       </Rekha>\r\n//     </div>\r\n//   )\r\n// }\r\nclass App extends Component{\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      robots: [],\r\n      searchInput: '',\r\n      message: \"RoboFans\",\r\n      popup: false,\r\n      currentImage: '',\r\n      loading: true\r\n    }\r\n    console.log(\"constructor\");\r\n  }\r\n  onSearchChange = (event) => {\r\n    this.setState({searchInput:event.target.value})\r\n  }\r\n  openPopup = (event) => {\r\n    let currentImage = event.target.parentNode.children[0].src;\r\n    this.setState({currentImage:currentImage})\r\n    this.setState({popup:true})\r\n  }\r\n  closePopup = () => {\r\n    this.setState({popup:false})\r\n  }\r\n  componentDidMount() {\r\n    console.log(\"will Mount\");\r\n    fetch('https://jsonplaceholder.typicode.com/users')\r\n    .then(resp=>{\r\n      return resp.json();\r\n    })\r\n    .then(user=>{\r\n     this.setState({robots:user});\r\n    })\r\n  }\r\n  render() {\r\n    const { robots, searchInput, message, popup } = this.state;\r\n    console.log(\"render\")\r\n    const filterRobot = robots.filter(robot => {\r\n      return robot.name.toLowerCase().includes(searchInput.toLowerCase());\r\n    })\r\n    return(\r\n      <React.Fragment>\r\n        {popup ? <Popup closePopup={this.closePopup} image={this.state.currentImage}/>:\"\"}\r\n        <div className=\"tc mh5\">\r\n          <h1>{message}</h1>\r\n          {/* <Message message={filterRobot.length===0?\"No Records Found!\":this.state.message}/> */}\r\n          <Search searchedData={this.onSearchChange} />\r\n          <Scroll>\r\n            <CardList robots={filterRobot} popupWindow={this.openPopup}/>\r\n          </Scroll>\r\n        </div>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport tachyons from 'tachyons';\nimport App from './conatiner/App';\nimport reportWebVitals from './reportWebVitals';\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}